"""
Django settings for studentzone project.

Generated by 'django-admin startproject' using Django 4.2.23.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-x%8&9e$ge&c^6jr8ttse6i1&&qoltw-5ec&^fs1m_*y0f1rs-i'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.humanize',
    
    # SAML Authentication
    'djangosaml2',
    
    # Custom apps
    'core',
    'communities',
    'discussions',
    'projects',
    'resources',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'studentzone.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'studentzone.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Europe/Amsterdam'

USE_I18N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS = [
    BASE_DIR / 'static',
]
STATIC_ROOT = BASE_DIR / 'staticfiles'

# Media files
MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media'

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Login/Logout URLs
LOGIN_URL = '/saml2/login/'
LOGIN_REDIRECT_URL = '/'
LOGOUT_REDIRECT_URL = '/'

# Simple SAML Configuration for Development
SAML_CONFIG = {
    'debug': DEBUG,
    'xmlsec_binary': None,
    'entityid': 'http://127.0.0.1:8000/saml2/metadata/',
    'description': 'StudentZone - Development',
    'service': {
        'sp': {
            'name': 'StudentZone',
            'endpoints': {
                'assertion_consumer_service': [
                    ('http://127.0.0.1:8000/saml2/acs/', 'urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST'),
                ],
                'single_logout_service': [
                    ('http://127.0.0.1:8000/saml2/ls/', 'urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect'),
                ],
            },
            'name_id_format': 'urn:oasis:names:tc:SAML:2.0:nameid-format:transient',
            'authn_requests_signed': False,
            'want_assertions_signed': False,
            'want_response_signed': False,
            'want_assertions_or_response_signed': False,
            'want_name_id': True,
            'want_attribute_statement': True,
            'want_digest': False,
            'want_signature_validation': False,
            'attribute_map': {
                'uid': 'username',
                'mail': 'email',
                'cn': 'first_name',
                'sn': 'last_name',
                'schacHomeOrganization': 'university',
                'schacPersonalUniqueCode': 'student_id',
            },
        },
    },
    'key_file': None,
    'cert_file': None,
    'encryption_keypairs': [],
    'valid_for': 24,
    'metadata': {
        'local': [],
        'remote': [],  # Removed problematic SurfConext URL for development
    },
}

# Development IdP Configuration (for testing without external IdP)
SAML_IDP_CONFIG = {
    'default': {
        'entityid': 'https://test.surfconext.nl',
        'description': 'Test SurfConext IdP',
        'service': {
            'idp': {
                'name': 'Test SurfConext',
                'endpoints': {
                    'single_sign_on_service': [
                        ('https://test.surfconext.nl/sso/', 'urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect'),
                    ],
                    'single_logout_service': [
                        ('https://test.surfconext.nl/slo/', 'urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect'),
                    ],
                },
                'name_id_format': 'urn:oasis:names:tc:SAML:2.0:nameid-format:transient',
            },
        },
        'key_file': None,
        'cert_file': None,
    },
}

# SAML Settings for Development
SAML_CSP_HANDLER = ''  # Disable CSP warnings
SAML_STRICT = False  # More lenient for development
SAML_DEBUG = True

# SAML Authentication Backend
AUTHENTICATION_BACKENDS = (
    'django.contrib.auth.backends.ModelBackend',
    'core.saml_backend.SurfConextSaml2Backend',
)

# Messages
from django.contrib.messages import constants as messages
MESSAGE_TAGS = {
    messages.DEBUG: 'alert-info',
    messages.INFO: 'alert-info',
    messages.SUCCESS: 'alert-success',
    messages.WARNING: 'alert-warning',
    messages.ERROR: 'alert-danger',
}
