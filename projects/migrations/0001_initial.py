# Generated by Django 5.2.4 on 2025-07-18 20:56

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('communities', '0001_initial'),
        ('core', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('project_type', models.CharField(choices=[('research', 'Research Project'), ('coursework', 'Coursework'), ('hackathon', 'Hackathon'), ('startup', 'Startup/Business'), ('open_source', 'Open Source'), ('competition', 'Competition'), ('other', 'Other')], max_length=20)),
                ('status', models.CharField(choices=[('planning', 'Planning'), ('recruiting', 'Recruiting'), ('active', 'Active'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='planning', max_length=20)),
                ('team_size_min', models.IntegerField(default=1)),
                ('team_size_max', models.IntegerField(blank=True, null=True)),
                ('is_open_to_all', models.BooleanField(default=True)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('deadline', models.DateField(blank=True, null=True)),
                ('contact_email', models.EmailField(blank=True, max_length=254)),
                ('external_link', models.URLField(blank=True)),
                ('meeting_schedule', models.TextField(blank=True)),
                ('is_featured', models.BooleanField(default=False)),
                ('view_count', models.IntegerField(default=0)),
                ('application_count', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('community', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='projects', to='communities.community')),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_projects', to=settings.AUTH_USER_MODEL)),
                ('study_fields', models.ManyToManyField(related_name='projects', to='core.studyfield')),
                ('universities', models.ManyToManyField(related_name='projects', to='core.university')),
            ],
            options={
                'ordering': ['-is_featured', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ProjectApplication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('accepted', 'Accepted'), ('rejected', 'Rejected'), ('withdrawn', 'Withdrawn')], default='pending', max_length=20)),
                ('motivation', models.TextField()),
                ('relevant_experience', models.TextField()),
                ('time_commitment', models.CharField(help_text='e.g., 10 hours/week', max_length=100)),
                ('skills', models.TextField(help_text='Relevant skills and expertise')),
                ('preferred_contact', models.CharField(choices=[('email', 'Email'), ('discord', 'Discord'), ('slack', 'Slack'), ('other', 'Other')], default='email', max_length=20)),
                ('contact_info', models.CharField(blank=True, max_length=200)),
                ('applied_at', models.DateTimeField(auto_now_add=True)),
                ('reviewed_at', models.DateTimeField(blank=True, null=True)),
                ('applicant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='project_applications', to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='applications', to='projects.project')),
                ('reviewed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reviewed_applications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-applied_at'],
                'unique_together': {('project', 'applicant')},
            },
        ),
        migrations.CreateModel(
            name='ProjectMembership',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('leader', 'Project Leader'), ('member', 'Team Member'), ('mentor', 'Mentor'), ('advisor', 'Advisor')], default='member', max_length=20)),
                ('joined_at', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=True)),
                ('contribution_description', models.TextField(blank=True)),
                ('hours_contributed', models.IntegerField(default=0)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='memberships', to='projects.project')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='project_memberships', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-joined_at'],
                'unique_together': {('project', 'user')},
            },
        ),
        migrations.CreateModel(
            name='StudyPartner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('preferred_study_methods', models.CharField(blank=True, help_text='e.g., group study, online, library', max_length=500)),
                ('subjects_of_interest', models.TextField(help_text='Specific subjects or topics you want to study')),
                ('availability', models.TextField(help_text="When you're available to study")),
                ('max_distance_km', models.IntegerField(default=50, help_text='Maximum distance for in-person meetings')),
                ('online_only', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('preferred_universities', models.ManyToManyField(blank=True, related_name='preferred_by_partners', to='core.university')),
                ('study_field', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='study_partners', to='core.studyfield')),
                ('university', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='study_partners', to='core.university')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='study_partner_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
                'unique_together': {('user', 'study_field', 'university')},
            },
        ),
        migrations.CreateModel(
            name='StudyPartnerRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField()),
                ('proposed_meeting_time', models.DateTimeField(blank=True, null=True)),
                ('meeting_location', models.CharField(blank=True, max_length=200)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('accepted', 'Accepted'), ('rejected', 'Rejected'), ('expired', 'Expired')], default='pending', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('responded_at', models.DateTimeField(blank=True, null=True)),
                ('recipient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='received_partner_requests', to=settings.AUTH_USER_MODEL)),
                ('requester', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sent_partner_requests', to=settings.AUTH_USER_MODEL)),
                ('study_field', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.studyfield')),
            ],
            options={
                'ordering': ['-created_at'],
                'unique_together': {('requester', 'recipient', 'study_field')},
            },
        ),
    ]
